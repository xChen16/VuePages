{"remainingRequest":"/home/chen/code/2/1/VuePages/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/chen/code/2/1/VuePages/node_modules/vuepress-theme-reco/components/Common.vue?vue&type=style&index=0&id=31857951&lang=stylus&scoped=true&","dependencies":[{"path":"/home/chen/code/2/1/VuePages/node_modules/vuepress-theme-reco/components/Common.vue","mtime":499162500000},{"path":"/home/chen/code/2/1/VuePages/node_modules/css-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/chen/code/2/1/VuePages/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/home/chen/code/2/1/VuePages/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/home/chen/code/2/1/VuePages/node_modules/stylus-loader/index.js","mtime":1519606876000},{"path":"/home/chen/code/2/1/VuePages/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/chen/code/2/1/VuePages/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCi5mYWRlLWVudGVyLWFjdGl2ZSwgLmZhZGUtbGVhdmUtYWN0aXZlIHsKICB0cmFuc2l0aW9uOiBvcGFjaXR5IC41czsKfQouZmFkZS1lbnRlciwgLmZhZGUtbGVhdmUtdG8gLyogLmZhZGUtbGVhdmUtYWN0aXZlIGJlbG93IHZlcnNpb24gMi4xLjggKi8gewogIG9wYWNpdHk6IDA7Cn0K"},{"version":3,"sources":["Common.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA8LA;AACA;AACA;AACA;AACA;AACA","file":"Common.vue","sourceRoot":"node_modules/vuepress-theme-reco/components","sourcesContent":["<template>\n  <div\n    class=\"theme-container\"\n    :class=\"pageClasses\"\n    @touchstart=\"onTouchStart\"\n    @touchend=\"onTouchEnd\">\n    <transition name=\"fade\">\n      <Loading v-if=\"firstLoad\"></Loading>\n      <Password v-else-if=\"!isHasKey\"></Password>\n      <div v-else>\n        <Navbar\n        v-if=\"shouldShowNavbar\"\n        @toggle-sidebar=\"toggleSidebar\"/>\n\n        <div\n          class=\"sidebar-mask\"\n          @click=\"toggleSidebar(false)\"></div>\n\n        <Sidebar\n          :items=\"sidebarItems\"\n          @toggle-sidebar=\"toggleSidebar\">\n          <slot\n            name=\"sidebar-top\"\n            slot=\"top\"/>\n          <slot\n            name=\"sidebar-bottom\"\n            slot=\"bottom\"/>\n        </Sidebar>  \n\n        <Password v-if=\"!isHasPageKey\" :isPage=\"true\"></Password>\n        <div v-else>\n          <slot></slot>\n          <Valine :isComment=\"isComment\"></Valine>\n        </div>\n        \n        <BackToTop></BackToTop>\n      </div>\n    </transition>\n  </div>\n</template>\n\n<script>\nimport Navbar from '@theme/components/Navbar.vue'\nimport Sidebar from '@theme/components/Sidebar.vue'\nimport { resolveSidebarItems } from '../util'\nimport Password from '@theme/components/Password'\nimport Loading from '@theme/components/Loading'\nimport Valine from '@theme/components/Valine/'\nimport BackToTop from \"@theme/components/BackToTop\"\nimport { setTimeout } from 'timers';\n\nexport default {\n  components: { Sidebar, Navbar, Password, Valine, BackToTop, Loading },\n\n  props: ['sidebar', 'isComment'],\n\n  data () {\n    return {\n      isSidebarOpen: false,\n      isHasKey: true,\n      isHasPageKey: true,\n      firstLoad: true\n    }\n  },\n\n  computed: {\n    shouldShowNavbar () {\n      const { themeConfig } = this.$site\n      const { frontmatter } = this.$page\n      if (\n        frontmatter.navbar === false\n        || themeConfig.navbar === false) {\n        return false\n      }\n      return (\n        this.$title\n        || themeConfig.logo\n        || themeConfig.repo\n        || themeConfig.nav\n        || this.$themeLocaleConfig.nav\n      )\n    },\n\n    shouldShowSidebar () {\n      const { frontmatter } = this.$page\n      return (\n        this.sidebar !== false\n        && !frontmatter.home\n        && frontmatter.sidebar !== false\n        && this.sidebarItems.length\n      )\n    },\n\n    sidebarItems () {\n      return resolveSidebarItems(\n        this.$page,\n        this.$page.regularPath,\n        this.$site,\n        this.$localePath\n      )\n    },\n\n    pageClasses () {\n      const userPageClass = this.$frontmatter.pageClass\n      return [\n        {\n          'no-navbar': !this.shouldShowNavbar,\n          'sidebar-open': this.isSidebarOpen,\n          'no-sidebar': !this.shouldShowSidebar\n        },\n        userPageClass\n      ]\n    }\n  },\n\n  mounted () {\n    this.$router.afterEach(() => {\n      this.isSidebarOpen = false\n    })\n\n    this.hasKey()\n    this.hasPageKey()\n    this.handleLoading()\n  },\n\n  methods: {\n    hasKey () {\n      const keyPage = this.$themeConfig.keyPage\n      if (!keyPage) {\n        this.isHasKey =  true\n        return\n      }\n\n      const keys = keyPage.keys\n      this.isHasKey = keys && keys.indexOf(sessionStorage.getItem('key')) > -1\n    },\n    hasPageKey () {\n      const pageKeys = this.$frontmatter.keys\n      if (!pageKeys) {\n        this.isHasPageKey =  true\n        return\n      }\n\n      this.isHasPageKey = pageKeys && pageKeys.indexOf(sessionStorage.getItem('pageKey')) > -1\n    },\n    toggleSidebar (to) {\n      this.isSidebarOpen = typeof to === 'boolean' ? to : !this.isSidebarOpen\n    },\n\n    // side swipe\n    onTouchStart (e) {\n      this.touchStart = {\n        x: e.changedTouches[0].clientX,\n        y: e.changedTouches[0].clientY\n      }\n    },\n\n    onTouchEnd (e) {\n      const dx = e.changedTouches[0].clientX - this.touchStart.x\n      const dy = e.changedTouches[0].clientY - this.touchStart.y\n      if (Math.abs(dx) > Math.abs(dy) && Math.abs(dx) > 40) {\n        if (dx > 0 && this.touchStart.x <= 80) {\n          this.toggleSidebar(true)\n        } else {\n          this.toggleSidebar(false)\n        }\n      }\n    },\n\n    handleLoading () {\n      const time = this.$frontmatter.home && sessionStorage.getItem('firstLoad') == undefined ? 1000 : 0\n      setTimeout(() => {\n        this.firstLoad = false\n        if (sessionStorage.getItem('firstLoad') == undefined) sessionStorage.setItem('firstLoad', false)\n      }, time)\n    }\n  },\n\n  watch: {\n    $frontmatter (newVal, oldVal) {\n      if (newVal.home) {\n        this.hasKey()\n        this.hasPageKey()\n      }\n    }\n  }\n}\n</script>\n\n<style lang=\"stylus\" scoped>\n.fade-enter-active, .fade-leave-active {\n  transition: opacity .5s;\n}\n.fade-enter, .fade-leave-to /* .fade-leave-active below version 2.1.8 */ {\n  opacity: 0;\n}\n</style>\n"]}]}