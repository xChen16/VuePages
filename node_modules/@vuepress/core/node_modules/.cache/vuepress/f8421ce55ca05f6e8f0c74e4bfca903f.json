{"remainingRequest":"/home/chen/code/2/1/VuePages/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/chen/code/2/1/VuePages/node_modules/vuepress-theme-reco/components/ScreenFull.vue?vue&type=style&index=0&id=1bd2bcfe&lang=stylus&scoped=true&","dependencies":[{"path":"/home/chen/code/2/1/VuePages/node_modules/vuepress-theme-reco/components/ScreenFull.vue","mtime":499162500000},{"path":"/home/chen/code/2/1/VuePages/node_modules/css-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/chen/code/2/1/VuePages/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/home/chen/code/2/1/VuePages/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/home/chen/code/2/1/VuePages/node_modules/stylus-loader/index.js","mtime":1519606876000},{"path":"/home/chen/code/2/1/VuePages/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/chen/code/2/1/VuePages/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgouZnVsbHNjcmVlbi13cmFwcGVyIHsKICBtYXJnaW4tcmlnaHQ6IDFlbTsKICAuaWNvbmZvbnQgewogICAgZm9udC1zaXplIDEuNHJlbQogICAgY29sb3I6ICRhY2NlbnRDb2xvcgogIH0KfQo="},{"version":3,"sources":["ScreenFull.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAkDA;AACA;AACA;AACA;AACA;AACA;AACA","file":"ScreenFull.vue","sourceRoot":"node_modules/vuepress-theme-reco/components","sourcesContent":["<template>\n  <div class=\"fullscreen-wrapper\">\n    <i class=\"iconfont reco-fullscreen\" @click=\"click\"></i>\n  </div>\n</template>\n\n<script>\nimport screenfull from 'screenfull'\nexport default {\n  name: 'Screenfull',\n  data() {\n    return {\n      isFullscreen: false\n    }\n  },\n  mounted() {\n    this.init()\n  },\n  beforeDestroy() {\n    this.destroy()\n  },\n  methods: {\n    click() {\n      if (!screenfull.enabled) {\n        this.$message({\n          message: 'you browser can not work',\n          type: 'warning'\n        })\n        return false\n      }\n      screenfull.toggle()\n    },\n    change() {\n      this.isFullscreen = screenfull.isFullscreen\n    },\n    init() {\n      if (screenfull.enabled) {\n        screenfull.on('change', this.change)\n      }\n    },\n    destroy() {\n      if (screenfull.enabled) {\n        screenfull.off('change', this.change)\n      }\n    }\n  }\n}\n</script>\n\n<style lang=\"stylus\" scoped>\n.fullscreen-wrapper {\n  margin-right: 1em;\n  .iconfont {\n    font-size 1.4rem\n    color: $accentColor\n  }\n}\n</style>\n"]}]}