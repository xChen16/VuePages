{"remainingRequest":"/home/chen/code/2/1/VuePages/node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!/home/chen/code/2/1/VuePages/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/chen/code/2/1/VuePages/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/chen/code/2/1/VuePages/node_modules/vuepress-theme-reco/components/HomeBlog.vue?vue&type=template&id=2bf77a07&","dependencies":[{"path":"/home/chen/code/2/1/VuePages/node_modules/vuepress-theme-reco/components/HomeBlog.vue","mtime":499162500000},{"path":"/home/chen/code/2/1/VuePages/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/chen/code/2/1/VuePages/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":499162500000},{"path":"/home/chen/code/2/1/VuePages/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/chen/code/2/1/VuePages/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"}]}